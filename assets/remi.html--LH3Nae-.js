import{_ as s,c as a,o as i,f as e}from"./app-BfCDUtKQ.js";const r="/assets/2024-04-28-19-17-29-DtAr8vmc.png",l="/assets/2024-04-30-22-38-19-t9cN25kA.png",n="/assets/2024-04-30-22-44-48-Dvi2_7em.png",o={},p=e('<p><a href="https://github.com/rime/home/wiki/RimeWithSchemata#rime-%E8%BC%B8%E5%85%A5%E6%96%B9%E6%A1%88" target="_blank" rel="noopener noreferrer">RIME是什么</a></p><p>参考这个文章，可以有个大概的了解</p><h2 id="选择原因" tabindex="-1"><a class="header-anchor" href="#选择原因"><span>选择原因</span></a></h2><ol><li>开源，相对安全可靠</li><li>离线使用，不会上传数据</li><li>高度的定制 (可双拼挂音形)</li></ol><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>下载地址: <a href="https://rime.im/download/" target="_blank" rel="noopener noreferrer">https://rime.im/download/</a></p><figure><img src="'+r+'" alt="" width="200" height="300" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>macos安装完后，通常右上角会出现如上的图标，如果没有出现，尝试重启或重新登陆。</p><h3 id="功能说明" tabindex="-1"><a class="header-anchor" href="#功能说明"><span>功能说明</span></a></h3><ol><li>重新部署：当修改了配置文件时，用于配置生效使用</li><li>同步用户数据：同步用户配置、造词、字频记录(<a href="#%E9%85%8D%E7%BD%AE%E5%90%8C%E6%AD%A5cli">如何通过CLI同步</a>)</li><li>用户设定：打开用户配置文件夹（RIME都是以配置文件为主，无图形化）</li><li>在线文档</li><li>检查更新</li></ol><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h2><p><a href="https://github.com/iDvel/rime-ice" target="_blank" rel="noopener noreferrer">雾凇配置参考</a></p><p><a href="https://dvel.me/posts/rime-ice/" target="_blank" rel="noopener noreferrer">雾凇配置详解</a></p><blockquote><p>感谢大佬的配置。建议直接下载别人的先使用，需要个人定制的，再去详细了解配置文件</p></blockquote><h2 id="小鹤音形" tabindex="-1"><a class="header-anchor" href="#小鹤音形"><span>小鹤音形</span></a></h2><h3 id="只支持音形" tabindex="-1"><a class="header-anchor" href="#只支持音形"><span>只支持音形</span></a></h3><p><a href="http://flypy.ysepan.com/" target="_blank" rel="noopener noreferrer">http://flypy.ysepan.com/</a></p><p>下载音形文件，打开<code>用户设定</code> ，将你的文件覆盖即可。</p><figure><img src="'+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="支持双拼-音形" tabindex="-1"><a class="header-anchor" href="#支持双拼-音形"><span>支持双拼&amp;音形</span></a></h3><p>解压下载的文件，</p><ol><li>将build/*bin 文件复制都build目录下。</li><li>将flypy*文件，复制到rime目录</li><li>修改default.yaml 添加音形</li></ol><div class="language-yaml" data-ext="yaml" data-title="yaml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">schema_list</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">  - </span><span style="color:#E06C75;--shiki-dark:#E06C75;">schema</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">flypy</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 小鹤音形</span></span></code></pre></div><p>重新部署即可，切换输入法的快捷定义是</p><div class="language-yaml" data-ext="yaml" data-title="yaml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">switcher</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  caption</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;[方案菜单]&quot;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">  hotkeys</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">    - </span><span style="color:#98C379;--shiki-dark:#98C379;">F2</span></span></code></pre></div><p>按快捷键F2，即可切换输入方式，具体以你个人的设置为准</p><figure><img src="`+n+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="配置同步-cli" tabindex="-1"><a class="header-anchor" href="#配置同步-cli"><span>配置同步（CLI）</span></a></h2><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/bin/bash</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [ </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">-n</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;$(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pgrep</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;Squirrel&#39;)&quot;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ]; </span><span style="color:#C678DD;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">    cpu_usage</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">$(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">ps</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -p</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> $(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pgrep</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;Squirrel&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#D19A66;--shiki-dark:#D19A66;">-o</span><span style="color:#98C379;--shiki-dark:#98C379;"> %cpu=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [ </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;$(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">echo</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">$cpu_usage</span><span style="color:#98C379;--shiki-dark:#98C379;"> == 0&quot; </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">|</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> bc</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -l</span><span style="color:#98C379;--shiki-dark:#98C379;">)&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> -eq</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ]; </span><span style="color:#C678DD;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">        cd</span><span style="color:#98C379;--shiki-dark:#98C379;"> ~/Library/Rime</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        DYLD_LIBRARY_PATH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;/Library/Input Methods/Squirrel.app/Contents/Frameworks&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;/Library/Input Methods/Squirrel.app/Contents/MacOS/Squirrel&quot;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> --quit</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">        DYLD_LIBRARY_PATH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;/Library/Input Methods/Squirrel.app/Contents/Frameworks&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;/Library/Input Methods/Squirrel.app/Contents/MacOS/rime_dict_manager&quot;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> -s</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">    fi</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">fi</span></span></code></pre></div><p>如果觉得脚本不方便，可直接输入以下内容</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">22</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 22</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> *</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> *</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> *</span><span style="color:#98C379;--shiki-dark:#98C379;"> if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [ </span><span style="color:#D19A66;--shiki-dark:#D19A66;">-n</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;$(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pgrep</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;Squirrel&#39;)&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> ]</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">; </span><span style="color:#C678DD;--shiki-dark:#C678DD;">then</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> cpu_usage</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">$(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">ps</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -p</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> $(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">pgrep</span><span style="color:#98C379;--shiki-dark:#98C379;"> &#39;Squirrel&#39;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">) </span><span style="color:#D19A66;--shiki-dark:#D19A66;">-o</span><span style="color:#98C379;--shiki-dark:#98C379;"> %cpu=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">); </span><span style="color:#C678DD;--shiki-dark:#C678DD;">if</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [ </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;$(</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">echo</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;</span><span style="color:#E06C75;--shiki-dark:#E06C75;">$cpu_usage</span><span style="color:#98C379;--shiki-dark:#98C379;"> == 0&quot; </span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">|</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> bc</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -l</span><span style="color:#98C379;--shiki-dark:#98C379;">)&quot;</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> -eq</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 1</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> ]; </span><span style="color:#C678DD;--shiki-dark:#C678DD;">then</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> cd</span><span style="color:#98C379;--shiki-dark:#98C379;"> ~/Library/Rime</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="color:#E06C75;--shiki-dark:#E06C75;">DYLD_LIBRARY_PATH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;/Library/Input Methods/Squirrel.app/Contents/Frameworks&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;/Library/Input Methods/Squirrel.app/Contents/MacOS/Squirrel&quot;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> --quit</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="color:#E06C75;--shiki-dark:#E06C75;">DYLD_LIBRARY_PATH</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;/Library/Input Methods/Squirrel.app/Contents/Frameworks&quot;</span><span style="color:#98C379;--shiki-dark:#98C379;"> &quot;/Library/Input Methods/Squirrel.app/Contents/MacOS/rime_dict_manager&quot;</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> -s</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">; </span><span style="color:#C678DD;--shiki-dark:#C678DD;">fi</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">; </span><span style="color:#C678DD;--shiki-dark:#C678DD;">fi</span></span></code></pre></div>`,31),t=[p];function c(k,d){return i(),a("div",null,t)}const B=s(o,[["render",c],["__file","remi.html.vue"]]),y=JSON.parse(`{"path":"/tools/remi.html","title":"Rime输入法","lang":"zh-CN","frontmatter":{"title":"Rime输入法","order":100,"index":true,"article":true,"category":["效率"],"tag":["输入法"],"description":"RIME是什么 参考这个文章，可以有个大概的了解 选择原因 开源，相对安全可靠 离线使用，不会上传数据 高度的定制 (可双拼挂音形) 安装 下载地址: https://rime.im/download/ macos安装完后，通常右上角会出现如上的图标，如果没有出现，尝试重启或重新登陆。 功能说明 重新部署：当修改了配置文件时，用于配置生效使用 同步用户...","head":[["meta",{"property":"og:url","content":"https://docs.lizili.online/tools/remi.html"}],["meta",{"property":"og:site_name","content":"lzz's Blog"}],["meta",{"property":"og:title","content":"Rime输入法"}],["meta",{"property":"og:description","content":"RIME是什么 参考这个文章，可以有个大概的了解 选择原因 开源，相对安全可靠 离线使用，不会上传数据 高度的定制 (可双拼挂音形) 安装 下载地址: https://rime.im/download/ macos安装完后，通常右上角会出现如上的图标，如果没有出现，尝试重启或重新登陆。 功能说明 重新部署：当修改了配置文件时，用于配置生效使用 同步用户..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-24T12:29:50.000Z"}],["meta",{"property":"article:author","content":"z"}],["meta",{"property":"article:tag","content":"输入法"}],["meta",{"property":"article:modified_time","content":"2024-05-24T12:29:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Rime输入法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-24T12:29:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"z\\",\\"url\\":\\"https://docs.lizili.online\\"}]}"]]},"headers":[{"level":2,"title":"选择原因","slug":"选择原因","link":"#选择原因","children":[]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"功能说明","slug":"功能说明","link":"#功能说明","children":[]}]},{"level":2,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]},{"level":2,"title":"小鹤音形","slug":"小鹤音形","link":"#小鹤音形","children":[{"level":3,"title":"只支持音形","slug":"只支持音形","link":"#只支持音形","children":[]},{"level":3,"title":"支持双拼&音形","slug":"支持双拼-音形","link":"#支持双拼-音形","children":[]}]},{"level":2,"title":"配置同步（CLI）","slug":"配置同步-cli","link":"#配置同步-cli","children":[]}],"git":{"createdTime":1716553790000,"updatedTime":1716553790000,"contributors":[{"name":"lizili","email":"cn.zili.lee@outlook.com","commits":1}]},"readingTime":{"minutes":1.81,"words":542},"filePathRelative":"tools/remi.md","localizedDate":"2024年5月24日","excerpt":"<p><a href=\\"https://github.com/rime/home/wiki/RimeWithSchemata#rime-%E8%BC%B8%E5%85%A5%E6%96%B9%E6%A1%88\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">RIME是什么</a></p>\\n<p>参考这个文章，可以有个大概的了解</p>\\n<h2>选择原因</h2>\\n<ol>\\n<li>开源，相对安全可靠</li>\\n<li>离线使用，不会上传数据</li>\\n<li>高度的定制 (可双拼挂音形)</li>\\n</ol>\\n<h2>安装</h2>\\n<p>下载地址: <a href=\\"https://rime.im/download/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://rime.im/download/</a></p>","autoDesc":true}`);export{B as comp,y as data};
