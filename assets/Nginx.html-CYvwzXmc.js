import{_ as s,c as a,o as n,f as e}from"./app-BfCDUtKQ.js";const l="/assets/2023-07-22-11-21-04-BREuXulL.png",i={},p=e(`<h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><div class="hint-container warning"><p class="hint-container-title">请注意</p><p>本文内容可能已过时，请自行甄别。</p></div><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><blockquote><p>安装Nginx</p></blockquote><p><strong>nginx默认使用80端口，请确保80未被使用</strong></p><p>Nginx安装包</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">wget</span><span style="color:#98C379;--shiki-dark:#98C379;"> http://www.nginx.org/download/nginx-[version].tar.gz</span></span></code></pre></div><p>Nginx cache purge 模块(可选)</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># wget http://labs.frickle.com/files/ngx_cache_purge-[version].tar.gz</span></span></code></pre></div><p>编译安装</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">./configure</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--prefix=/usr/local/nginx-[version] </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">--with-http_stub_status_module</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--with-http_ssl_module </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--with-http_realip_module </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\ </span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">--add-module</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#98C379;--shiki-dark:#98C379;">../ngx_cache_purge-1.3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># make</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># make install</span></span></code></pre></div><p>启动</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">/usr/local/nginx-[version]/sbin/nginx</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   #启动</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">/usr/local/nginx-[version]/sbin/nginx</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -t</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #测试，检测配置</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">/usr/local/nginx-[version]/sbin/nginx</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -s</span><span style="color:#98C379;--shiki-dark:#98C379;"> stop</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">/usr/local/nginx-[version]/sbin/nginx</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -s</span><span style="color:#98C379;--shiki-dark:#98C379;"> reload</span></span></code></pre></div><p>打开浏览器，访问nginx地址，出现welcome nginx则配置成功</p><h2 id="日志格式" tabindex="-1"><a class="header-anchor" href="#日志格式"><span>日志格式</span></a></h2><p>日志变量(log_format)</p><div class="language-conf line-numbers-mode" data-ext="conf" data-title="conf"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>$args                    #请求中的参数值</span></span>
<span class="line"><span>$query_string            #同 $args</span></span>
<span class="line"><span>$arg_NAME                #GET请求中NAME的值</span></span>
<span class="line"><span>$is_args                 #如果请求中有参数，值为&quot;?&quot;，否则为空字符串</span></span>
<span class="line"><span>$uri                     #请求中的当前URI(不带请求参数，参数位于$args)，可以不同于浏览器传递的$request_uri的值，它可以通过内部重定向，或者使用index指令进行修改，$uri不包含主机名，如&quot;/foo/bar.html&quot;。</span></span>
<span class="line"><span>$document_uri            #同 $uri</span></span>
<span class="line"><span>$document_root           #当前请求的文档根目录或别名</span></span>
<span class="line"><span>$host                    #优先级：HTTP请求行的主机名&gt;&quot;HOST&quot;请求头字段&gt;符合请求的服务器名.请求中的主机头字段，如果请求中的主机头不可用，则为服务器处理请求的服务器名称</span></span>
<span class="line"><span>$hostname                #主机名</span></span>
<span class="line"><span>$https                   #如果开启了SSL安全模式，值为&quot;on&quot;，否则为空字符串。</span></span>
<span class="line"><span>$binary_remote_addr      #客户端地址的二进制形式，固定长度为4个字节</span></span>
<span class="line"><span>$body_bytes_sent         #传输给客户端的字节数，响应头不计算在内；这个变量和Apache的mod_log_config模块中的&quot;%B&quot;参数保持兼容</span></span>
<span class="line"><span>$bytes_sent              #传输给客户端的字节数</span></span>
<span class="line"><span>$connection              #TCP连接的序列号</span></span>
<span class="line"><span>$connection_requests     #TCP连接当前的请求数量</span></span>
<span class="line"><span>$content_length          #&quot;Content-Length&quot; 请求头字段</span></span>
<span class="line"><span>$content_type            #&quot;Content-Type&quot; 请求头字段</span></span>
<span class="line"><span>$cookie_name             #cookie名称</span></span>
<span class="line"><span>$limit_rate              #用于设置响应的速度限制</span></span>
<span class="line"><span>$msec                    #当前的Unix时间戳</span></span>
<span class="line"><span>$nginx_version           #nginx版本</span></span>
<span class="line"><span>$pid                     #工作进程的PID</span></span>
<span class="line"><span>$pipe                    #如果请求来自管道通信，值为&quot;p&quot;，否则为&quot;.&quot;</span></span>
<span class="line"><span>$proxy_protocol_addr     #获取代理访问服务器的客户端地址，如果是直接访问，该值为空字符串</span></span>
<span class="line"><span>$realpath_root           #当前请求的文档根目录或别名的真实路径，会将所有符号连接转换为真实路径</span></span>
<span class="line"><span>$remote_addr             #客户端地址</span></span>
<span class="line"><span>$remote_port             #客户端端口</span></span>
<span class="line"><span>$remote_user             #用于HTTP基础认证服务的用户名</span></span>
<span class="line"><span>$request                 #代表客户端的请求地址</span></span>
<span class="line"><span>$request_body            #客户端的请求主体：此变量可在location中使用，将请求主体通过proxy_pass，fastcgi_pass，uwsgi_pass和scgi_pass传递给下一级的代理服务器</span></span>
<span class="line"><span>$request_body_file       #将客户端请求主体保存在临时文件中。文件处理结束后，此文件需删除。如果需要之一开启此功能，需要设置client_body_in_file_only。如果将次文件传 递给后端的代理服务器，需要禁用request body，即设置proxy_pass_request_body off，fastcgi_pass_request_body off，uwsgi_pass_request_body off，or scgi_pass_request_body off</span></span>
<span class="line"><span>$request_completion      #如果请求成功，值为&quot;OK&quot;，如果请求未完成或者请求不是一个范围请求的最后一部分，则为空</span></span>
<span class="line"><span>$request_filename        #当前连接请求的文件路径，由root或alias指令与URI请求生成</span></span>
<span class="line"><span>$request_length          #请求的长度 (包括请求的地址，http请求头和请求主体)</span></span>
<span class="line"><span>$request_method          #HTTP请求方法，通常为&quot;GET&quot;或&quot;POST&quot;</span></span>
<span class="line"><span>$request_time            #处理客户端请求使用的时间,单位为秒，精度毫秒； 从读入客户端的第一个字节开始，直到把最后一个字符发送给客户端后进行日志写入为止。</span></span>
<span class="line"><span>$request_uri             #这个变量等于包含一些客户端请求参数的原始URI，它无法修改，请查看$uri更改或重写URI，不包含主机名，例如：&quot;/cnphp/test.php?arg=freemouse&quot;</span></span>
<span class="line"><span>$scheme                  #请求使用的Web协议，&quot;http&quot; 或 &quot;https&quot;</span></span>
<span class="line"><span>$server_addr             #服务器端地址，需要注意的是：为了避免访问linux系统内核，应将ip地址提前设置在配置文件中</span></span>
<span class="line"><span>$server_name             #服务器名</span></span>
<span class="line"><span>$server_port             #服务器端口</span></span>
<span class="line"><span>$server_protocol         #服务器的HTTP版本，通常为 &quot;HTTP/1.0&quot; 或 &quot;HTTP/1.1&quot;</span></span>
<span class="line"><span>$status                  #HTTP响应代码</span></span>
<span class="line"><span>$time_iso8601            #服务器时间的ISO 8610格式</span></span>
<span class="line"><span>$time_local              #服务器时间（LOG Format 格式）</span></span>
<span class="line"><span>$cookie_NAME             #客户端请求Header头中的cookie变量，前缀&quot;$cookie_&quot;加上cookie名称的变量，该变量的值即为cookie名称的值</span></span>
<span class="line"><span>$http_NAME               #匹配任意请求头字段；变量名中的后半部分NAME可以替换成任意请求头字段，如在配置文件中需要获取http请求头：&quot;Accept-Language&quot;，$http_accept_language即可</span></span>
<span class="line"><span>$http_cookie</span></span>
<span class="line"><span>$http_host               #请求地址，即浏览器中你输入的地址（IP或域名）</span></span>
<span class="line"><span>$http_referer            #url跳转来源,用来记录从那个页面链接访问过来的</span></span>
<span class="line"><span>$http_user_agent         #用户终端浏览器等信息</span></span>
<span class="line"><span>$http_x_forwarded_for  #客户端地址(有反向代理时使用)</span></span>
<span class="line"><span>$sent_http_NAME          #可以设置任意http响应头字段；变量名中的后半部分NAME可以替换成任意响应头字段，如需要设置响应头Content-length，$sent_http_content_length即可</span></span>
<span class="line"><span>$sent_http_cache_control</span></span>
<span class="line"><span>$sent_http_connection</span></span>
<span class="line"><span>$sent_http_content_type</span></span>
<span class="line"><span>$sent_http_keep_alive</span></span>
<span class="line"><span>$sent_http_last_modified</span></span>
<span class="line"><span>$sent_http_location</span></span>
<span class="line"><span>$sent_http_transfer_encoding</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认日志格式</p><div class="language-conf" data-ext="conf" data-title="conf"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span></span>
<span class="line"><span>                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span></span>
<span class="line"><span>                      &#39;&quot;$http_user_agent&quot;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#main为日志格式名</span></span></code></pre></div><p>可以根据自己的情况定义不同的log格式.然后在日志的 path后调用<br> access_log logs/it_access.log main;</p><p>当日志文件中记录的值为&quot;-&quot;时，表示为空 .</p><h3 id="自定义的格式" tabindex="-1"><a class="header-anchor" href="#自定义的格式"><span>自定义的格式</span></a></h3><div class="language-conf" data-ext="conf" data-title="conf"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>log_format logstash &#39;$remote_addr|$http_host|$request|$http_referer|$status |$http_user_agent|$request_time|$remote_user&#39;;</span></span></code></pre></div><h2 id="lua获取请求参数" tabindex="-1"><a class="header-anchor" href="#lua获取请求参数"><span>lua获取请求参数</span></a></h2><figure><img src="`+l+`" alt="conf" width="300" height="200" tabindex="0" loading="lazy"><figcaption>conf</figcaption></figure><blockquote><p>下载的所有包，放在了/opt/packages目录下</p></blockquote><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖"><span>安装依赖</span></a></h3><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">yum</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -y</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#98C379;--shiki-dark:#98C379;"> gcc</span><span style="color:#98C379;--shiki-dark:#98C379;"> gcc-c++</span><span style="color:#98C379;--shiki-dark:#98C379;"> glib</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;">*</span><span style="color:#98C379;--shiki-dark:#98C379;"> make</span><span style="color:#98C379;--shiki-dark:#98C379;"> autoconf</span><span style="color:#98C379;--shiki-dark:#98C379;"> openssl</span><span style="color:#98C379;--shiki-dark:#98C379;"> openssl-devel</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">libxslt-devel </span><span style="color:#98C379;--shiki-dark:#98C379;">gd</span><span style="color:#98C379;--shiki-dark:#98C379;"> gd-devel</span><span style="color:#98C379;--shiki-dark:#98C379;"> pcre</span><span style="color:#98C379;--shiki-dark:#98C379;"> pcre-devel</span><span style="color:#98C379;--shiki-dark:#98C379;">  readline-devel</span><span style="color:#98C379;--shiki-dark:#98C379;">  wget</span><span style="color:#98C379;--shiki-dark:#98C379;"> curl</span></span></code></pre></div><h3 id="下载安装包" tabindex="-1"><a class="header-anchor" href="#下载安装包"><span>下载安装包</span></a></h3><h4 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx"><span>nginx</span></a></h4><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">wget</span><span style="color:#98C379;--shiki-dark:#98C379;"> http://nginx.org/download/nginx-1.12.2.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">tar</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -xvf</span><span style="color:#98C379;--shiki-dark:#98C379;"> nginx-1.12.2.tar.gz</span></span></code></pre></div><h4 id="ngx-devel-kit" tabindex="-1"><a class="header-anchor" href="#ngx-devel-kit"><span>ngx_devel_kit</span></a></h4><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">wget</span><span style="color:#98C379;--shiki-dark:#98C379;"> https://github.com/simplresty/ngx_devel_kit/archive/v0.3.0.tar.gz</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">tar</span><span style="color:#98C379;--shiki-dark:#98C379;"> zxvf</span><span style="color:#98C379;--shiki-dark:#98C379;"> v0.3.0.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 放着，一会编译ngxin时导入。</span></span></code></pre></div><h4 id="lua-nginx-module" tabindex="-1"><a class="header-anchor" href="#lua-nginx-module"><span>lua-nginx-module</span></a></h4><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">wget</span><span style="color:#98C379;--shiki-dark:#98C379;"> https://github.com/openresty/lua-nginx-module/archive/v0.10.13.tar.gz</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">tar</span><span style="color:#98C379;--shiki-dark:#98C379;"> zxvf</span><span style="color:#98C379;--shiki-dark:#98C379;"> v0.10.13.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 放着，一会编译ngxin时导入。</span></span></code></pre></div><h3 id="安装luajit" tabindex="-1"><a class="header-anchor" href="#安装luajit"><span>安装LuaJIT</span></a></h3><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">wget</span><span style="color:#98C379;--shiki-dark:#98C379;"> http://luajit.org/download/LuaJIT-2.0.5.tar.gz</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">tar</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -zxvf</span><span style="color:#98C379;--shiki-dark:#98C379;">  LuaJIT-2.0.5.tar.gz</span></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">cd</span><span style="color:#98C379;--shiki-dark:#98C379;"> LuaJIT-2.0.5</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">make</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span><span style="color:#98C379;--shiki-dark:#98C379;"> PREFIX=/usr/local/LuaJIT</span></span></code></pre></div><p>输出 以下内容则成功</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">====</span><span style="color:#98C379;--shiki-dark:#98C379;"> Successfully</span><span style="color:#98C379;--shiki-dark:#98C379;"> installed</span><span style="color:#98C379;--shiki-dark:#98C379;"> LuaJIT</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 2.0.5</span><span style="color:#98C379;--shiki-dark:#98C379;"> to</span><span style="color:#98C379;--shiki-dark:#98C379;"> /usr/local/LuaJIT</span><span style="color:#98C379;--shiki-dark:#98C379;"> ====</span></span></code></pre></div><p>修改环境变量</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">export</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> LUAJIT_LIB</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">usr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">local</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">LuaJIT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">lib</span></span>
<span class="line"><span style="color:#C678DD;--shiki-dark:#C678DD;">export</span><span style="color:#E06C75;--shiki-dark:#E06C75;"> LUAJIT_INC</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">=</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">usr</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">local</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">LuaJIT</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">include</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">/</span><span style="color:#E06C75;--shiki-dark:#E06C75;">luajit-2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="color:#E06C75;--shiki-dark:#E06C75;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">source</span><span style="color:#98C379;--shiki-dark:#98C379;"> /etc/profile</span></span></code></pre></div><h3 id="编译安装nginx" tabindex="-1"><a class="header-anchor" href="#编译安装nginx"><span>编译安装nginx</span></a></h3><p>查看编译参数, 避免之前的模块路径错误</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">nginx</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -V</span></span></code></pre></div><p>新建用户，不新建，configure时取消参数--user=nginx</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">useradd</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -M</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -s</span><span style="color:#98C379;--shiki-dark:#98C379;"> /sbin/nologin</span><span style="color:#98C379;--shiki-dark:#98C379;"> nginx</span></span></code></pre></div><p>编译安装</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">./configure</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --user=nginx</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --group=nginx</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --prefix=/usr/local/nginx</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --with-file-aio</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--with-http_ssl_module </span><span style="color:#D19A66;--shiki-dark:#D19A66;">--with-http_realip_module</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --with-http_addition_module</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--with-http_xslt_module </span><span style="color:#D19A66;--shiki-dark:#D19A66;">--with-http_image_filter_module</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --with-http_sub_module</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--with-http_dav_module </span><span style="color:#D19A66;--shiki-dark:#D19A66;">--with-http_flv_module</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> --with-http_mp4_module</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--with-http_gunzip_module </span><span style="color:#D19A66;--shiki-dark:#D19A66;">--with-http_gzip_static_module</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--with-http_auth_request_module </span><span style="color:#D19A66;--shiki-dark:#D19A66;">--with-http_random_index_module</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--with-http_secure_link_module </span><span style="color:#D19A66;--shiki-dark:#D19A66;">--with-http_degradation_module</span><span style="color:#56B6C2;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--with-http_stub_status_module </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--with-ld-opt=-Wl,-rpath,/usr/local/LuaJIT/lib </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--add-module=/opt/packages/ngx_devel_kit-0.3.0 </span><span style="color:#56B6C2;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">--add-module=/opt/packages/lua-nginx-module-0.10.13</span></span></code></pre></div><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">make</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -j2</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">make</span><span style="color:#98C379;--shiki-dark:#98C379;"> install</span></span></code></pre></div><h3 id="测试lua" tabindex="-1"><a class="header-anchor" href="#测试lua"><span>测试lua</span></a></h3><p>修改<code>nginx.conf</code> 的<code>server</code> 添加如下</p><div class="language-conf" data-ext="conf" data-title="conf"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>location /lua { </span></span>
<span class="line"><span>    default_type &#39;text/plain&#39;; </span></span>
<span class="line"><span>    content_by_lua &#39;ngx.say(&quot;lua install success&quot;)&#39;; </span></span>
<span class="line"><span>}</span></span></code></pre></div><p>重载nginx</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">nginx</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -s</span><span style="color:#98C379;--shiki-dark:#98C379;"> reload</span></span></code></pre></div><p>请求</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">curl</span><span style="color:#98C379;--shiki-dark:#98C379;"> http://127.0.0.1/lua</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># lua install success</span></span></code></pre></div><h3 id="安装-cjson" tabindex="-1"><a class="header-anchor" href="#安装-cjson"><span>安装 cjson</span></a></h3><p><mark>如果需要lua解析json，可安装此模块</mark></p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">wget</span><span style="color:#98C379;--shiki-dark:#98C379;"> http://www.kyne.com.au/~mark/software/download/lua-cjson-2.1.0.tar.gz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">tar</span><span style="color:#98C379;--shiki-dark:#98C379;"> xvf</span><span style="color:#98C379;--shiki-dark:#98C379;"> lua-cjson-2.1.0.ta.gz</span></span>
<span class="line"></span>
<span class="line"><span style="color:#56B6C2;--shiki-dark:#56B6C2;">cd</span><span style="color:#98C379;--shiki-dark:#98C379;"> lua-cjson-2.1.0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">make</span></span></code></pre></div><p>如若报错如下</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">cc</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -c</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -O3</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -Wall</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -pedantic</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -DNDEBUG</span><span style="color:#D19A66;--shiki-dark:#D19A66;">  -I/usr/local/include</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -fpic</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -o</span><span style="color:#98C379;--shiki-dark:#98C379;"> lua_cjson.o</span><span style="color:#98C379;--shiki-dark:#98C379;"> lua_cjson.c</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">lua_cjson.c:43:17:</span><span style="color:#98C379;--shiki-dark:#98C379;"> 致命错误：lua.h：没有那个文件或目录</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #include &lt;lua.h&gt;</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">                 ^</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">编译中断。</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">make:</span><span style="color:#E5C07B;--shiki-dark:#E5C07B;"> ***</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> [lua_cjson.o] 错误 1</span></span></code></pre></div><p>修改<code>Makefile</code> 这两处</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">PREFIX</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#98C379;--shiki-dark:#98C379;">            /usr/local/LuaJIT</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">LUA_INCLUDE_DIR</span><span style="color:#98C379;--shiki-dark:#98C379;"> =</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">   $(</span><span style="color:#61AFEF;--shiki-dark:#61AFEF;">PREFIX</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">)</span><span style="color:#98C379;--shiki-dark:#98C379;">/include/luajit-2.0</span></span></code></pre></div><p>复制<code>cjson.so</code></p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> cp</span><span style="color:#98C379;--shiki-dark:#98C379;"> cjson.so</span><span style="color:#98C379;--shiki-dark:#98C379;"> /usr/local/LuaJIT/lib/lua/5.1/</span></span>
<span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;"> chmod</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> 755</span><span style="color:#98C379;--shiki-dark:#98C379;"> /usr/local/LuaJIT/lib/lua/5.1/cjson.so</span></span></code></pre></div><h3 id="使用lua-去rewrite路由" tabindex="-1"><a class="header-anchor" href="#使用lua-去rewrite路由"><span>使用lua 去rewrite路由</span></a></h3><div class="language-conf line-numbers-mode" data-ext="conf" data-title="conf"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>location /ztest {</span></span>
<span class="line"><span>	# 请求体的size大于nginx配置里的client_body_buffer_size</span></span>
<span class="line"><span>	# 则会导致请求体被缓冲到磁盘临时文件里，client_body_buffer_size默认是8k或者16k</span></span>
<span class="line"><span>	# 如果考虑性能，可以使用ngx.req.get_body_file()，见后续</span></span>
<span class="line"><span>	</span></span>
<span class="line"><span>	client_max_body_size  100m ;</span></span>
<span class="line"><span>    client_body_buffer_size  100m ;</span></span>
<span class="line"><span>    set $proxy &#39;&#39;;</span></span>
<span class="line"><span>        rewrite_by_lua_block {</span></span>
<span class="line"><span>            local request_method = ngx.var.request_method</span></span>
<span class="line"><span>            if request_method == &quot;GET&quot; then</span></span>
<span class="line"><span>                local arg = ngx.req.get_uri_args()[&quot;proxy&quot;] or 0</span></span>
<span class="line"><span>                ngx.var.proxy = arg</span></span>
<span class="line"><span>            elseif request_method == &quot;POST&quot; then</span></span>
<span class="line"><span>                ngx.req.read_body()</span></span>
<span class="line"><span>                local jkdata = ngx.req.get_body_data()</span></span>
<span class="line"><span>                --ngx.print(jkdata)</span></span>
<span class="line"><span>                if jkdata then</span></span>
<span class="line"><span>                	--如果传进来的是 json 通过这种方式解析，</span></span>
<span class="line"><span>                    --cjson = require &quot;cjson&quot;</span></span>
<span class="line"><span>                    --jkval = cjson.decode(jkdata)</span></span>
<span class="line"><span>                    --ngx.var.proxy = valp[&quot;proxy&quot;]</span></span>
<span class="line"><span>                    # 这里测试下，使用正则去匹配了IP</span></span>
<span class="line"><span>                    ngx.var.proxy = jkdata:match(&quot;(%d+%.%d+%.%d+%.%d+)&quot;)</span></span>
<span class="line"><span>                    --ngx.var.proxy = jkval[&quot;proxy&quot;]</span></span>
<span class="line"><span>                end</span></span>
<span class="line"><span>            end</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    include     /usr/local/nginx/conf/uwsgi_params;</span></span>
<span class="line"><span>    proxy_pass  $proxy:18001;</span></span>
<span class="line"><span>    access_log logs/aaa_access.log;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ngx.req.get_body_file()</p><div class="language-conf line-numbers-mode" data-ext="conf" data-title="conf"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>ngx.req.read_body()</span></span>
<span class="line"><span>body_data = ngx.req.get_body_data()</span></span>
<span class="line"><span>if not body_data then</span></span>
<span class="line"><span>    local datafile = ngx.req.get_body_file()</span></span>
<span class="line"><span>    if not datafile then</span></span>
<span class="line"><span>        error_code = 1</span></span>
<span class="line"><span>        error_msg = &quot;no request body found&quot;</span></span>
<span class="line"><span>    else</span></span>
<span class="line"><span>        local fh, err = io.open(datafile, &quot;r&quot;)</span></span>
<span class="line"><span>        if not fh then</span></span>
<span class="line"><span>            error_code = 2</span></span>
<span class="line"><span>            error_msg = &quot;failed to open &quot; .. tostring(datafile) .. &quot;for reading: &quot; .. tostring(err)</span></span>
<span class="line"><span>        else</span></span>
<span class="line"><span>            fh:seek(&quot;set&quot;)</span></span>
<span class="line"><span>            body_data = fh:read(&quot;*a&quot;)</span></span>
<span class="line"><span>            fh:close()</span></span>
<span class="line"><span>            if body_data == &quot;&quot; then</span></span>
<span class="line"><span>                error_code = 3</span></span>
<span class="line"><span>                error_msg = &quot;request body is empty&quot;</span></span>
<span class="line"><span>            end</span></span>
<span class="line"><span>        end</span></span>
<span class="line"><span>    end</span></span>
<span class="line"><span> end</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="相关包" tabindex="-1"><a class="header-anchor" href="#相关包"><span>相关包</span></a></h3><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>链接: https://pan.baidu.com/s/1nq9pOQO7uj88DwfHaT0EDg 提取码: p3fh</span></span></code></pre></div><h2 id="nginx负载与反代" tabindex="-1"><a class="header-anchor" href="#nginx负载与反代"><span>nginx负载与反代</span></a></h2><blockquote><p>nginx 负载</p></blockquote><p>新建配置文件blance-test.conf</p><p><strong>在nginx.conf 中include blance-test.conf</strong></p><div class="language-conf line-numbers-mode" data-ext="conf" data-title="conf"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>upstream blance-test {</span></span>
<span class="line"><span>    server 192.168.1.11:80;</span></span>
<span class="line"><span>    server 192.168.1.22:80;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>server</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>    listen 80;</span></span>
<span class="line"><span>    server_name www.example.com; </span></span>
<span class="line"><span>    location / {</span></span>
<span class="line"><span>        proxy_redirect off;</span></span>
<span class="line"><span>        proxy_set_header Host $host;</span></span>
<span class="line"><span>        proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span></span>
<span class="line"><span>        proxy_pass http://blance-test;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    access_log logs/blance-test_access.log;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>⚠️ <code>proxy_set_header....</code></p><p>重点看下proxy_set_header X-Forwarded-For,当使用了代理时，web服务器无法取得真实IP，为了避免这个情况，代理服务器通常会增加一个叫做x_forwarded_for的头信息，连接它的客户端IP（即客户端IP）加到这个头信息里，这样就能保证网站的web服务器能获取到真实IP</p><p><code>$host</code>: 请求中的主机头(Host)字段，如果请求中的主机头不可用或者空，则为处理请求的server名称(处理请求的server的server_name的值)。小写，不含端口。</p><p><code>$remote_addr;</code> 客户端的IP地址（中间无代理则是真实客户端IP，有代理则是代理IP）</p><p><code>$proxy_add_x_forwarded_for;</code> 就是<code>$http_x_forwarded_for</code>加上<code>$remote_addr </code></p><p>官方解释</p><blockquote><p>$proxy_add_x_forwarded_for</p><p>the “X-Forwarded-For” client request header field with the $remote_addr variable appended to it, separated by a comma. If the “X-Forwarded-For” field is not present in the client request header, the $proxy_add_x_forwarded_for variable is equal to the $remote_addr variable.</p></blockquote><blockquote><p>nginx 反向代理</p></blockquote><p><em><strong>可选配置，与http同级</strong></em></p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>   client_max_body_size 50m; #缓冲区代理缓冲用户端请求的最大字节数</span></span>
<span class="line"><span>    client_body_buffer_size 256k;</span></span>
<span class="line"><span>    client_header_timeout 3m;</span></span>
<span class="line"><span>    client_body_timeout 3m;</span></span>
<span class="line"><span>    send_timeout 3m;</span></span>
<span class="line"><span>    proxy_connect_timeout 300s; #nginx跟后端服务器连接超时时间(代理连接超时)</span></span>
<span class="line"><span>    proxy_read_timeout 300s; #连接成功后，后端服务器响应时间(代理接收超时)</span></span>
<span class="line"><span>    proxy_send_timeout 300s;</span></span>
<span class="line"><span>    proxy_buffer_size 64k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小</span></span>
<span class="line"><span>    proxy_buffers 4 32k; #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置</span></span>
<span class="line"><span>    proxy_busy_buffers_size 64k; #高负荷下缓冲大小（proxy_buffers*2）</span></span>
<span class="line"><span>    proxy_temp_file_write_size 64k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传递请求，而不缓冲到磁盘</span></span>
<span class="line"><span>    proxy_ignore_client_abort on; #不允许代理端主动关闭连接</span></span></code></pre></div><p>新建配置文件reverse-proxy.conf<em><strong>然后在nginx.conf 中include reverse-proxy.conf</strong></em></p><div class="language- line-numbers-mode" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>    server {</span></span>
<span class="line"><span>        listen          7001;</span></span>
<span class="line"><span>        server_name     192.168.1.202:7001;</span></span>
<span class="line"><span>        charset utf-8;</span></span>
<span class="line"><span>        location /console {</span></span>
<span class="line"><span>           # proxy_set_header Host $host:$proxy_port;</span></span>
<span class="line"><span>            proxy_set_header Host $http_host;</span></span>
<span class="line"><span>            proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span></span>
<span class="line"><span>            proxy_pass http://192.168.1.11:7001;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        access_log logs/192.168.1.11:7001_access.log;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    server {</span></span>
<span class="line"><span>        listen          8001;</span></span>
<span class="line"><span>        server_name     192.168.1.202:8001;</span></span>
<span class="line"><span>        charset utf-8;</span></span>
<span class="line"><span>        location / {</span></span>
<span class="line"><span>            proxy_set_header Host $host:$proxy_port;</span></span>
<span class="line"><span>            proxy_set_header X-Real-IP $remote_addr;</span></span>
<span class="line"><span>            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span></span>
<span class="line"><span>            proxy_pass http://192.168.1.11:8001;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        access_log logs/192.168.1.11:8001_access.log;</span></span>
<span class="line"><span>    }</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里要说明下</p><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>server_name </span></span>
<span class="line"><span>#主要用于配置基于名称的虚拟主机，可匹配正则，如果没有域名可填写IP，不填或随便填写一个</span></span>
<span class="line"><span>#nginx 根据 server_name 匹配 HTTP 请求头的 host，去决定使用那个 server</span></span>
<span class="line"><span>#如果都没有匹配则使用默认的。如果没有默认就是第一个server</span></span>
<span class="line"><span></span></span>
<span class="line"><span>$http_host 和 $host的区别</span></span>
<span class="line"><span></span></span>
<span class="line"><span>$host 上边描述过，主机头(Host)字段，如果不可用或空就是server_name的值。</span></span>
<span class="line"><span>$http_host  可以理解请求地址，即浏览器中你输入的地址（IP或域名）</span></span>
<span class="line"><span>那么这两个使用哪个好一些呢？</span></span>
<span class="line"><span>如果Host请求头部没有出现在请求头中，则$http_host值为空，但是$host值为主域名，</span></span>
<span class="line"><span>一般而言，会用$host代替$http_host，避免http请求中丢失Host头部的情况下Host不被重写。</span></span>
<span class="line"><span>如果对端口又要求可加上 :$proxy_port</span></span></code></pre></div><p><a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#.24proxy_add_x_forwarded_for" target="_blank" rel="noopener noreferrer">官方关于nginx 代理模块的文章</a></p><blockquote><p>Nginx访问日志 IP统计<br> awk &#39;{print $1}&#39; access.log | sort | uniq -c|sort -n</p></blockquote>`,92),r=[p];function o(c,t){return n(),a("div",null,r)}const k=s(i,[["render",o],["__file","Nginx.html.vue"]]),h=JSON.parse(`{"path":"/ops/linux/Nginx.html","title":"Nginx","lang":"zh-CN","frontmatter":{"article":true,"title":"Nginx","order":33,"category":["linux"],"tag":["nginx"],"index":true,"description":"请注意 本文内容可能已过时，请自行甄别。 安装 安装Nginx nginx默认使用80端口，请确保80未被使用 Nginx安装包 Nginx cache purge 模块(可选) 编译安装 启动 打开浏览器，访问nginx地址，出现welcome nginx则配置成功 日志格式 日志变量(log_format) 默认日志格式 可以根据自己的情况定义不同...","head":[["meta",{"property":"og:url","content":"https://docs.lizili.online/ops/linux/Nginx.html"}],["meta",{"property":"og:site_name","content":"lzz's Blog"}],["meta",{"property":"og:title","content":"Nginx"}],["meta",{"property":"og:description","content":"请注意 本文内容可能已过时，请自行甄别。 安装 安装Nginx nginx默认使用80端口，请确保80未被使用 Nginx安装包 Nginx cache purge 模块(可选) 编译安装 启动 打开浏览器，访问nginx地址，出现welcome nginx则配置成功 日志格式 日志变量(log_format) 默认日志格式 可以根据自己的情况定义不同..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-23T05:06:11.000Z"}],["meta",{"property":"article:author","content":"z"}],["meta",{"property":"article:tag","content":"nginx"}],["meta",{"property":"article:modified_time","content":"2024-04-23T05:06:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nginx\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-23T05:06:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"z\\",\\"url\\":\\"https://docs.lizili.online\\"}]}"]]},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"日志格式","slug":"日志格式","link":"#日志格式","children":[{"level":3,"title":"自定义的格式","slug":"自定义的格式","link":"#自定义的格式","children":[]}]},{"level":2,"title":"lua获取请求参数","slug":"lua获取请求参数","link":"#lua获取请求参数","children":[{"level":3,"title":"安装依赖","slug":"安装依赖","link":"#安装依赖","children":[]},{"level":3,"title":"下载安装包","slug":"下载安装包","link":"#下载安装包","children":[]},{"level":3,"title":"安装LuaJIT","slug":"安装luajit","link":"#安装luajit","children":[]},{"level":3,"title":"编译安装nginx","slug":"编译安装nginx","link":"#编译安装nginx","children":[]},{"level":3,"title":"测试lua","slug":"测试lua","link":"#测试lua","children":[]},{"level":3,"title":"安装 cjson","slug":"安装-cjson","link":"#安装-cjson","children":[]},{"level":3,"title":"使用lua 去rewrite路由","slug":"使用lua-去rewrite路由","link":"#使用lua-去rewrite路由","children":[]},{"level":3,"title":"相关包","slug":"相关包","link":"#相关包","children":[]}]},{"level":2,"title":"nginx负载与反代","slug":"nginx负载与反代","link":"#nginx负载与反代","children":[]}],"git":{"createdTime":1690001165000,"updatedTime":1713848771000,"contributors":[{"name":"lizili","email":"cn.zili.lee@outlook.com","commits":3}]},"readingTime":{"minutes":9.44,"words":2833},"filePathRelative":"ops/linux/Nginx.md","localizedDate":"2023年7月22日","excerpt":"\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">请注意</p>\\n<p>本文内容可能已过时，请自行甄别。</p>\\n</div>\\n<h2>安装</h2>\\n<blockquote>\\n<p>安装Nginx</p>\\n</blockquote>\\n<p><strong>nginx默认使用80端口，请确保80未被使用</strong></p>\\n<p>Nginx安装包</p>\\n<div class=\\"language-shell\\" data-ext=\\"shell\\" data-title=\\"shell\\"><pre class=\\"shiki shiki-themes one-dark-pro one-dark-pro vp-code\\" style=\\"background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf\\" tabindex=\\"0\\"><code><span class=\\"line\\"><span style=\\"color:#61AFEF;--shiki-dark:#61AFEF\\">wget</span><span style=\\"color:#98C379;--shiki-dark:#98C379\\"> http://www.nginx.org/download/nginx-[version].tar.gz</span></span></code></pre>\\n</div>","autoDesc":true}`);export{k as comp,h as data};
