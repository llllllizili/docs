import{_ as t,c as r,e as p,w as e,f as i,g as c,o as k,h as a,b as s}from"./app-BfCDUtKQ.js";const d={},h=i(`<h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><p><a href="https://metallb.org/installation/" target="_blank" rel="noopener noreferrer">官方文档</a></p><p><a href="https://github.com/danderson/metallb" target="_blank" rel="noopener noreferrer">项目地址</a></p><p>MetalLB 是一个负载均衡器，专门解决裸金属 Kubernetes 集群中无法使用 LoadBalancer 类型服务的痛点。有了MetaLB，</p><blockquote><p>metallb：为k8s集群的service提供LoadBalancer类型的支持</p></blockquote><h2 id="前置准备" tabindex="-1"><a class="header-anchor" href="#前置准备"><span>前置准备</span></a></h2><ol><li>Kubernetes v1.13.0 或者更新的版本</li><li><a href="https://metallb.universe.tf/installation/network-addons/" target="_blank" rel="noopener noreferrer">CNI兼容自查</a></li><li>这里使用MetaLB的 layer 2模式，需要至少两个连续的IP作为地址池使用</li><li>L2 模式下需要各个节点间 7946 端口联通</li><li>BGP 略</li></ol><h3 id="修改-kube-proxy" tabindex="-1"><a class="header-anchor" href="#修改-kube-proxy"><span>修改 kube proxy</span></a></h3><p>修改 kube-proxy 配置文件，启用严格的 ARP。如果 kube-proxy 使用的是 ipvs 模式</p><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">kubectl</span><span style="color:#98C379;--shiki-dark:#98C379;"> edit</span><span style="color:#98C379;--shiki-dark:#98C379;"> configmap</span><span style="color:#D19A66;--shiki-dark:#D19A66;"> -n</span><span style="color:#98C379;--shiki-dark:#98C379;"> kube-system</span><span style="color:#98C379;--shiki-dark:#98C379;"> kube-proxy</span></span></code></pre></div><div class="language-yaml" data-ext="yaml" data-title="yaml"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">          ipvs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            excludeCIDRs</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">null</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            minSyncPeriod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">0s</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            scheduler</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            strictARP</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#D19A66;--shiki-dark:#D19A66;">true</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #false改为true</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            syncPeriod</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">0s</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            tcpFinTimeout</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">0s</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            tcpTimeout</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">0s</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">            udpTimeout</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">0s</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">          kind</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">KubeProxyConfiguration</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">          metricsBindAddress</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;&quot;</span></span>
<span class="line"><span style="color:#E06C75;--shiki-dark:#E06C75;">          mode</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">: </span><span style="color:#98C379;--shiki-dark:#98C379;">&quot;ipvs&quot;</span><span style="color:#7F848E;font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 配置为 ipvs</span></span></code></pre></div><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p><a href="https://github.com/bitnami/charts/tree/main/bitnami/metallb" target="_blank" rel="noopener noreferrer">bitnami - metallb</a></p>`,13),b=s("div",{class:"language-shell","data-ext":"shell","data-title":"shell"},[s("pre",{class:"shiki shiki-themes one-dark-pro one-dark-pro vp-code",style:{"background-color":"#282c34","--shiki-dark-bg":"#282c34",color:"#abb2bf","--shiki-dark":"#abb2bf"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#61AFEF","--shiki-dark":"#61AFEF"}},"helm"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," repo"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," add"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," metallb"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," https://metallb.github.io/metallb")])])])],-1),y=s("div",{class:"language-shell","data-ext":"shell","data-title":"shell"},[s("pre",{class:"shiki shiki-themes one-dark-pro one-dark-pro vp-code",style:{"background-color":"#282c34","--shiki-dark-bg":"#282c34",color:"#abb2bf","--shiki-dark":"#abb2bf"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#61AFEF","--shiki-dark":"#61AFEF"}},"helm"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," install"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," metallb"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," metallb/metallb"),s("span",{style:{color:"#D19A66","--shiki-dark":"#D19A66"}}," --version"),s("span",{style:{color:"#D19A66","--shiki-dark":"#D19A66"}}," 0.13.12")])])])],-1),B=s("p",null,null,-1),C=s("div",{class:"language-shell","data-ext":"shell","data-title":"shell"},[s("pre",{class:"shiki shiki-themes one-dark-pro one-dark-pro vp-code",style:{"background-color":"#282c34","--shiki-dark-bg":"#282c34",color:"#abb2bf","--shiki-dark":"#abb2bf"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#61AFEF","--shiki-dark":"#61AFEF"}},"helm"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," pull"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," metallb/metallb"),s("span",{style:{color:"#D19A66","--shiki-dark":"#D19A66"}}," --version"),s("span",{style:{color:"#D19A66","--shiki-dark":"#D19A66"}}," 0.13.12")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#61AFEF","--shiki-dark":"#61AFEF"}},"tar"),s("span",{style:{color:"#D19A66","--shiki-dark":"#D19A66"}}," -zxvf"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," metallb-0.13.12.tgz"),s("span",{style:{color:"#ABB2BF","--shiki-dark":"#ABB2BF"}}," ")]),a(`
`),s("span",{class:"line"}),a(`
`),s("span",{class:"line"},[s("span",{style:{color:"#61AFEF","--shiki-dark":"#61AFEF"}},"helm"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," upgrade"),s("span",{style:{color:"#D19A66","--shiki-dark":"#D19A66"}}," --install"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," metallb"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," ."),s("span",{style:{color:"#D19A66","--shiki-dark":"#D19A66"}}," -f"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," values.yaml"),s("span",{style:{color:"#D19A66","--shiki-dark":"#D19A66"}}," -n"),s("span",{style:{color:"#98C379","--shiki-dark":"#98C379"}}," kube-system"),s("span",{style:{color:"#D19A66","--shiki-dark":"#D19A66"}}," --create-namespace")])])])],-1),m=i(`<h2 id="地址池配置" tabindex="-1"><a class="header-anchor" href="#地址池配置"><span>地址池配置</span></a></h2><blockquote><p>Layer2 模式进行配置，需要创建一个 IPAddressPool 资源对象，用来指定用于分配的 IP 池，这部分一定要在 DHCP 服务器上做 IP 资源的保留，避免IP冲突，引发异常</p></blockquote><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">cat</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt;&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">EOF</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &gt; </span><span style="color:#98C379;--shiki-dark:#98C379;">pool.yaml</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">apiVersion: metallb.io/v1beta1</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">kind: IPAddressPool</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">metadata:</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  name: ip-pool</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  namespace: metallb-system</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">spec:</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  addresses:</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    - 192.168.2.149-192.168.2.150        #分配给LB的IP池</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">EOF</span></span></code></pre></div><p>广播</p><blockquote><p>广播声明，可以关联上面的 IP 池对象，这样会使用关联的 IP 池地址。为了通告来自 IPAddressPool 的 IP，L2Advertisement 实例必须关联到 IPAddressPool。</p></blockquote><div class="language-shell" data-ext="shell" data-title="shell"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#61AFEF;--shiki-dark:#61AFEF;">cat</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &lt;&lt;</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">EOF</span><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;"> &gt;  </span><span style="color:#98C379;--shiki-dark:#98C379;">advertise.yaml</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">apiVersion: metallb.io/v1beta1</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">kind: L2Advertisement</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">metadata:</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  name: l2adver</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  namespace: metallb-system</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">spec:</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">  ipAddressPools:</span></span>
<span class="line"><span style="color:#98C379;--shiki-dark:#98C379;">    - ip-pool</span></span>
<span class="line"><span style="color:#ABB2BF;--shiki-dark:#ABB2BF;">EOF</span></span></code></pre></div><div class="language-" data-ext="" data-title=""><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code" style="background-color:#282c34;--shiki-dark-bg:#282c34;color:#abb2bf;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span>kubectl apply -f pool.yaml</span></span>
<span class="line"><span>kubectl apply -f  advertise.yaml</span></span></code></pre></div>`,7);function u(A,F){const o=c("Tabs");return k(),r("div",null,[h,p(o,{id:"61",data:[{id:"在线安装"},{id:"离线安装"}]},{title0:e(({value:l,isActive:n})=>[a("在线安装")]),title1:e(({value:l,isActive:n})=>[a("离线安装")]),tab0:e(({value:l,isActive:n})=>[b,y,B]),tab1:e(({value:l,isActive:n})=>[C]),_:1}),m])}const v=t(d,[["render",u],["__file","metallb.html.vue"]]),f=JSON.parse(`{"path":"/ops/GitOps/deploy/infra/metallb.html","title":"metalLB","lang":"zh-CN","frontmatter":{"article":true,"title":"metalLB","order":6,"category":["云原生","gitops"],"tag":["k8s","metallb"],"index":true,"description":"官方文档 项目地址 MetalLB 是一个负载均衡器，专门解决裸金属 Kubernetes 集群中无法使用 LoadBalancer 类型服务的痛点。有了MetaLB， metallb：为k8s集群的service提供LoadBalancer类型的支持 前置准备 Kubernetes v1.13.0 或者更新的版本 CNI兼容自查 这里使用MetaLB...","head":[["meta",{"property":"og:url","content":"https://docs.lizili.online/ops/GitOps/deploy/infra/metallb.html"}],["meta",{"property":"og:site_name","content":"lzz's Blog"}],["meta",{"property":"og:title","content":"metalLB"}],["meta",{"property":"og:description","content":"官方文档 项目地址 MetalLB 是一个负载均衡器，专门解决裸金属 Kubernetes 集群中无法使用 LoadBalancer 类型服务的痛点。有了MetaLB， metallb：为k8s集群的service提供LoadBalancer类型的支持 前置准备 Kubernetes v1.13.0 或者更新的版本 CNI兼容自查 这里使用MetaLB..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-12T03:42:17.000Z"}],["meta",{"property":"article:author","content":"z"}],["meta",{"property":"article:tag","content":"k8s"}],["meta",{"property":"article:tag","content":"metallb"}],["meta",{"property":"article:modified_time","content":"2024-03-12T03:42:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"metalLB\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-12T03:42:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"z\\",\\"url\\":\\"https://docs.lizili.online\\"}]}"]]},"headers":[{"level":2,"title":"前置准备","slug":"前置准备","link":"#前置准备","children":[{"level":3,"title":"修改 kube proxy","slug":"修改-kube-proxy","link":"#修改-kube-proxy","children":[]}]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"地址池配置","slug":"地址池配置","link":"#地址池配置","children":[]}],"git":{"createdTime":1701783884000,"updatedTime":1710214937000,"contributors":[{"name":"lizili","email":"cn.zili.lee@outlook.com","commits":1}]},"readingTime":{"minutes":1.44,"words":433},"filePathRelative":"ops/GitOps/deploy/infra/metallb.md","localizedDate":"2023年12月5日","excerpt":"\\n<p><a href=\\"https://metallb.org/installation/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方文档</a></p>\\n<p><a href=\\"https://github.com/danderson/metallb\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">项目地址</a></p>\\n<p>MetalLB 是一个负载均衡器，专门解决裸金属 Kubernetes 集群中无法使用 LoadBalancer 类型服务的痛点。有了MetaLB，</p>\\n<blockquote>\\n<p>metallb：为k8s集群的service提供LoadBalancer类型的支持</p>\\n</blockquote>","autoDesc":true}`);export{v as comp,f as data};
